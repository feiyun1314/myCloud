server:
  port: 9527

spring:
  application:
    name: cloud-gateway #以微服务注册进consul或nacos服务列表内
  cloud:
    consul: #配置consul地址
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway:
      routes:
        - id: pay_routh1 #pay_routh1                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
          uri: http://localhost:8001                #匹配后提供服务的路由地址
          #uri: lb://cloud-payment-service          #匹配后提供服务的路由地址

          predicates:
            - Path=/pay/gateway/get/**              # 断言，路径相匹配的进行路由
            #################常用断言api #####################################################
            #- After=2024-05-15T15:40:10.417185900+08:00[Asia/Shanghai]  #在什么时间之后可以访问
            #- Before=2024-05-15T15:41:10.417185900+08:00[Asia/Shanghai]  #在什么时间之前可以访问
            #- Between=2024-05-15T15:41:10.417185900+08:00[Asia/Shanghai],2024-05-15T15:45:10.417185900+08:00[Asia/Shanghai]  #在某个时间段内可以访问
            #- Cookie=username,feiyun  #含cookie且cookie name为feiyun才能访问
            #- Header=X-Request-Id, \d+  #请求头要有X-Request-Id属性并且值为整数的正则表达式
            #- Host=**.atguigu.com #  Host Route Predicate 接收一组参数，一组匹配的域名列表，这个模板是一个 ant 分隔的模板，用.号作为分隔符。   它通过参数中的主机地址作为匹配规则
            #- Query=username, \d+  # 要有参数名username并且值还要是整数才能路由
            #- RemoteAddr=192.168.124.1/24 # 外部访问我的IP限制，最大跨度不超过32，目前是1~24它们是 CIDR 表示法。
            #- Method=GET,POST #配置某个请求地址，只能用Get/Post方法访问，方法限制
            #- My=gold  #自定义路由配置
#            - name: My
#              args:
#                userType: diamond


        - id: pay_routh2 #pay_routh2                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/info/**              # 断言，路径相匹配的进行路由


        - id: pay_routh3 #pay_routh3               #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/filter/**              # 断言，路径相匹配的进行路由 真实地址
            #- Path=/gateway/filter/**              # 断言，为配合PrefixPath测试过滤，暂时注释掉/pay
            #- Path=/XYZ/abc/{segment}           # 断言，为配合SetPath测试，{segment}的内容最后被SetPath取代

          filters:
            #请求头(RequestHeader)相关组
          #  - AddRequestHeader=X-Request-atguigu1,atguiguValue1  # 指定请求头内容ByName 请求头kv，若一头含有多参则重写一行设置
          #  - AddRequestHeader=X-Request-atguigu2,atguiguValue2
          #  - RemoveRequestHeader=sec-fetch-site      # 删除请求头sec-fetch-site
          #  #请求参数(RequestParameter)相关组
          #  - SetRequestHeader=sec-fetch-mode, Blue-updatebyzzyy # 将请求头sec-fetch-mode对应的值修改为Blue-updatebyzzyy
          #  - AddRequestParameter=customerId,9527001 # 新增请求参数Parameter：k ，v
          #  - RemoveRequestParameter=customerName   # 删除url请求参数customerName，你传递过来也是null
          #  #回应头相关的内容
          #  - AddResponseHeader=X-Response-atguigu, BlueResponse # 新增请求参数X-Response-atguigu并设值为BlueResponse
          #  - SetResponseHeader=Date,2099-11-11 # 设置回应头Date值为2099-11-11
          #  - RemoveResponseHeader=Content-Type # 将默认自带Content-Type回应属性删除
            #前缀和路径相关组
            #- PrefixPath=/pay # http://localhost:9527/pay/gateway/filter 自动添加路径前缀
            #- SetPath=/pay/gateway/{segment}  # {segment}表示占位符，你写abc也行但要上下一致
            #- SetPath=/pay/gateway/{segment}  # {segment}表示占位符，你写abc也行但要上下一致
            #- RedirectTo=302, http://www.atguigu.com/ # 访问http://localhost:9527/pay/gateway/filter跳转到http://www.atguigu.com/
            #其他Default Filters
            #自定义过滤器
            - My=atguigu



